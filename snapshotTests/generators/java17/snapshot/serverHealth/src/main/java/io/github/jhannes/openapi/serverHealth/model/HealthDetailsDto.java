/*
 * Health API
 * Returns the status of the service
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.serverHealth.model;

import java.io.File;
import java.net.URI;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import java.util.UUID;
import java.util.function.Function;
import java.util.stream.Collectors;

public interface HealthDetailsDto  {
    String getType();

    static DataSourceHealthDetailsDto DataSourceHealthDetails() {
        DataSourceHealthDetailsDto result = new DataSourceHealthDetailsDto();
        result.type("DataSourceHealthDetails");
        return result;
    }
    static HealthComponentFailureDetailsDto HealthComponentFailureDetails() {
        HealthComponentFailureDetailsDto result = new HealthComponentFailureDetailsDto();
        result.type("HealthComponentFailureDetails");
        return result;
    }
    static ThreadHealthDetailsDto ThreadHealthDetails() {
        ThreadHealthDetailsDto result = new ThreadHealthDetailsDto();
        result.type("ThreadHealthDetails");
        return result;
    }

    static Class<? extends HealthDetailsDto> getType(String type) {
        switch (type) {
        case "DataSourceHealthDetails":
            return DataSourceHealthDetailsDto.class;
        case "HealthComponentFailureDetails":
            return HealthComponentFailureDetailsDto.class;
        case "ThreadHealthDetails":
            return ThreadHealthDetailsDto.class;
        default:
            throw new IllegalArgumentException("Illegal type " + type);
        }
    }

    void readOnlyFieldsWithValue(List<String> fields);
}

