/*
 * GeoJSON
 * GeoJSON
 *
 * The version of the OpenAPI document: 0.1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.geojson.model;

import java.io.File;
import java.net.URI;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import java.util.UUID;
import java.util.function.Function;
import java.util.stream.Collectors;

public interface GeometryDto  {
    String getType();

    static PointDto Point() {
        PointDto result = new PointDto();
        result.type("Point");
        return result;
    }
    static PolygonDto Polygon() {
        PolygonDto result = new PolygonDto();
        result.type("Polygon");
        return result;
    }
    static LineStringDto LineString() {
        LineStringDto result = new LineStringDto();
        result.type("LineString");
        return result;
    }

    static Class<? extends GeometryDto> getType(String type) {
        switch (type) {
        case "Point":
            return PointDto.class;
        case "Polygon":
            return PolygonDto.class;
        case "LineString":
            return LineStringDto.class;
        default:
            throw new IllegalArgumentException("Illegal type " + type);
        }
    }

    void readOnlyFieldsWithValue(List<String> fields);
}

