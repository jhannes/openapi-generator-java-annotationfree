/*
 * Sample API
 * Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
 *
 * The version of the OpenAPI document: 0.1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.typeHierarchy.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.jhannes.openapi.typeHierarchy.model.AddressDto;
import io.github.jhannes.openapi.typeHierarchy.model.WorkingDogCapabilityDto;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.github.jhannes.openapi.typeHierarchy.ApiClient;
/**
 * WorkingDogDto
 */
@JsonPropertyOrder({
  WorkingDogDto.JSON_PROPERTY_ID,
  WorkingDogDto.JSON_PROPERTY_NAME,
  WorkingDogDto.JSON_PROPERTY_BIRTH_DATE,
  WorkingDogDto.JSON_PROPERTY_OWNER_ADDRESS,
  WorkingDogDto.JSON_PROPERTY_PET_TYPE,
  WorkingDogDto.JSON_PROPERTY_BARK,
  WorkingDogDto.JSON_PROPERTY_BREED,
  WorkingDogDto.JSON_PROPERTY_CAPABILITIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class WorkingDogDto {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_BIRTH_DATE = "birth_date";
  private String birthDate;

  public static final String JSON_PROPERTY_OWNER_ADDRESS = "ownerAddress";
  private AddressDto ownerAddress;

  /**
   * Gets or Sets petType
   */
  public enum PetTypeEnum {
    WORKING_DOG("WorkingDog");

    private String value;

    PetTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PetTypeEnum fromValue(String value) {
      for (PetTypeEnum b : PetTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PET_TYPE = "pet_type";
  private PetTypeEnum petType;

  public static final String JSON_PROPERTY_BARK = "bark";
  private Boolean bark;

  /**
   * Gets or Sets breed
   */
  public enum BreedEnum {
    DINGO("Dingo"),
    
    HUSKY("Husky"),
    
    RETRIEVER("Retriever"),
    
    SHEPHERD("Shepherd");

    private String value;

    BreedEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BreedEnum fromValue(String value) {
      for (BreedEnum b : BreedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_BREED = "breed";
  private BreedEnum breed;

  public static final String JSON_PROPERTY_CAPABILITIES = "capabilities";
  private List<WorkingDogCapabilityDto> capabilities = new ArrayList<>();

  public WorkingDogDto() { 
  }

  @JsonCreator
  public WorkingDogDto(
    @JsonProperty(JSON_PROPERTY_ID) String id
  ) {
  this();
    this.id = id;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }




  public WorkingDogDto name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public WorkingDogDto birthDate(String birthDate) {
    this.birthDate = birthDate;
    return this;
  }

  /**
   * Get birthDate
   * @return birthDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBirthDate() {
    return birthDate;
  }


  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBirthDate(String birthDate) {
    this.birthDate = birthDate;
  }


  public WorkingDogDto ownerAddress(AddressDto ownerAddress) {
    this.ownerAddress = ownerAddress;
    return this;
  }

  /**
   * Get ownerAddress
   * @return ownerAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AddressDto getOwnerAddress() {
    return ownerAddress;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerAddress(AddressDto ownerAddress) {
    this.ownerAddress = ownerAddress;
  }


  public WorkingDogDto petType(PetTypeEnum petType) {
    this.petType = petType;
    return this;
  }

  /**
   * Get petType
   * @return petType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PET_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public PetTypeEnum getPetType() {
    return petType;
  }


  @JsonProperty(JSON_PROPERTY_PET_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPetType(PetTypeEnum petType) {
    this.petType = petType;
  }


  public WorkingDogDto bark(Boolean bark) {
    this.bark = bark;
    return this;
  }

  /**
   * Get bark
   * @return bark
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getBark() {
    return bark;
  }


  @JsonProperty(JSON_PROPERTY_BARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBark(Boolean bark) {
    this.bark = bark;
  }


  public WorkingDogDto breed(BreedEnum breed) {
    this.breed = breed;
    return this;
  }

  /**
   * Get breed
   * @return breed
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BREED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BreedEnum getBreed() {
    return breed;
  }


  @JsonProperty(JSON_PROPERTY_BREED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBreed(BreedEnum breed) {
    this.breed = breed;
  }


  public WorkingDogDto capabilities(List<WorkingDogCapabilityDto> capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  public WorkingDogDto addCapabilitiesItem(WorkingDogCapabilityDto capabilitiesItem) {
    if (this.capabilities == null) {
      this.capabilities = new ArrayList<>();
    }
    this.capabilities.add(capabilitiesItem);
    return this;
  }

  /**
   * Get capabilities
   * @return capabilities
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<WorkingDogCapabilityDto> getCapabilities() {
    return capabilities;
  }


  @JsonProperty(JSON_PROPERTY_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCapabilities(List<WorkingDogCapabilityDto> capabilities) {
    this.capabilities = capabilities;
  }


  /**
   * Return true if this WorkingDog object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkingDogDto workingDog = (WorkingDogDto) o;
    return Objects.equals(this.id, workingDog.id) &&
        Objects.equals(this.name, workingDog.name) &&
        Objects.equals(this.birthDate, workingDog.birthDate) &&
        Objects.equals(this.ownerAddress, workingDog.ownerAddress) &&
        Objects.equals(this.petType, workingDog.petType) &&
        Objects.equals(this.bark, workingDog.bark) &&
        Objects.equals(this.breed, workingDog.breed) &&
        Objects.equals(this.capabilities, workingDog.capabilities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, birthDate, ownerAddress, petType, bark, breed, capabilities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkingDogDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    ownerAddress: ").append(toIndentedString(ownerAddress)).append("\n");
    sb.append("    petType: ").append(toIndentedString(petType)).append("\n");
    sb.append("    bark: ").append(toIndentedString(bark)).append("\n");
    sb.append("    breed: ").append(toIndentedString(breed)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `birth_date` to the URL query string
    if (getBirthDate() != null) {
      joiner.add(String.format("%sbirth_date%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBirthDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ownerAddress` to the URL query string
    if (getOwnerAddress() != null) {
      joiner.add(getOwnerAddress().toUrlQueryString(prefix + "ownerAddress" + suffix));
    }

    // add `pet_type` to the URL query string
    if (getPetType() != null) {
      joiner.add(String.format("%spet_type%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPetType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `bark` to the URL query string
    if (getBark() != null) {
      joiner.add(String.format("%sbark%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBark()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `breed` to the URL query string
    if (getBreed() != null) {
      joiner.add(String.format("%sbreed%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBreed()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `capabilities` to the URL query string
    if (getCapabilities() != null) {
      for (int i = 0; i < getCapabilities().size(); i++) {
        if (getCapabilities().get(i) != null) {
          joiner.add(String.format("%scapabilities%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(ApiClient.valueToString(getCapabilities().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }
      }
    }

    return joiner.toString();
  }
}

