/*
 * Sample API
 * Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
 *
 * The version of the OpenAPI document: 0.1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.typeHierarchy.model;

import java.io.File;
import java.net.URI;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import java.util.UUID;
import java.util.function.Function;
import java.util.stream.Collectors;

public interface PetDto  {
    String getName();

    String getPetType();

    static WorkingDogDto WorkingDog() {
        WorkingDogDto result = new WorkingDogDto();
        result.petType("WorkingDog");
        return result;
    }
    static CatDto Cat() {
        CatDto result = new CatDto();
        result.petType("Cat");
        return result;
    }
    static GoldfishDto Goldfish() {
        GoldfishDto result = new GoldfishDto();
        result.petType("Goldfish");
        return result;
    }
    static DogDto Dog() {
        DogDto result = new DogDto();
        result.petType("Dog");
        return result;
    }

    static Class<? extends PetDto> getType(String petType) {
        switch (petType) {
        case "WorkingDog":
            return WorkingDogDto.class;
        case "Cat":
            return CatDto.class;
        case "Goldfish":
            return GoldfishDto.class;
        case "Dog":
            return DogDto.class;
        default:
            throw new IllegalArgumentException("Illegal petType " + petType);
        }
    }

    void readOnlyFieldsWithValue(List<String> fields);
}

