/*
 * Sample API
 * Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
 *
 * The version of the OpenAPI document: 0.1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.typeHierarchy.model;

import java.io.File;
import java.net.URI;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import java.util.UUID;
import java.util.function.Function;
import java.util.stream.Collectors;

/**
* PetBaseDto
*/
public class PetBaseDto {

    private String id = null;

    private String name;

    private String birth_date = null;

    private AddressDto ownerAddress = null;

    public static String[] readOnlyFields() {
        return new String[] {
                "id",
        };
    }

    public static String[] writeOnlyFields() {
        return new String[] {
        };
    }

    public static String[] requiredFields() {
        return new String[] {
                "name",
        };
    }

    public List<String> missingRequiredFields() {
        List<String> result = new ArrayList<>();
        if (isMissing(getName())) result.add("name");
        return result;
    }

    public void readOnlyFieldsWithValue(List<String> result) {
        if (!isMissing(getId())) {
            result.add("PetBaseDto.id");
        }
        if (ownerAddress != null) {
            ownerAddress.readOnlyFieldsWithValue(result);
        }
    }

    public <T extends PetBaseDto> T copyTo(T target) {
        if (this.getId() != null) target.setId(this.getId());
        if (this.getName() != null) target.setName(this.getName());
        if (this.getBirthDate() != null) target.setBirthDate(this.getBirthDate());
        if (this.getOwnerAddress() != null) target.setOwnerAddress(this.getOwnerAddress());
        return target;
    }

    private boolean isMissing(String s) {
        return s == null || s.isEmpty();
    }

    private boolean isMissing(List<?> list) {
        return list == null;
    }

    private boolean isMissing(Object s) {
        return s == null;
    }


    /**
     * Get id
     * read only
     * @return id
     */
    public String getId() {
        return id;
    }

    /** <strong>read only</strong> */
    public void setId(String id) {
        this.id = id;
    }

    public PetBaseDto id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get name
     * @return name
     */
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public PetBaseDto name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get birth_date
     * @return birth_date
     */
    public String getBirthDate() {
        return birth_date;
    }

    public void setBirthDate(String birthDate) {
        this.birth_date = birthDate;
    }

    public PetBaseDto birthDate(String birthDate) {
        this.birth_date = birthDate;
        return this;
    }

    /**
     * Get ownerAddress
     * @return ownerAddress
     */
    public AddressDto getOwnerAddress() {
        return ownerAddress;
    }

    public void setOwnerAddress(AddressDto ownerAddress) {
        this.ownerAddress = ownerAddress;
    }

    public PetBaseDto ownerAddress(AddressDto ownerAddress) {
        this.ownerAddress = ownerAddress;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PetBaseDto petBase = (PetBaseDto) o;
        return Objects.equals(this.getId(), petBase.getId()) &&
                Objects.equals(this.getName(), petBase.getName()) &&
                Objects.equals(this.getBirthDate(), petBase.getBirthDate()) &&
                Objects.equals(this.getOwnerAddress(), petBase.getOwnerAddress());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(), getName(), getBirthDate(), getOwnerAddress());
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PetBaseDto {\n");
        sb.append("    id: ").append(toIndentedString(getId())).append("\n");
        sb.append("    name: ").append(toIndentedString(getName())).append("\n");
        sb.append("    birth_date: ").append(toIndentedString(getBirthDate())).append("\n");
        sb.append("    ownerAddress: ").append(toIndentedString(getOwnerAddress())).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

