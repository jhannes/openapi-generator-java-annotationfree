/*
 * Conversations
 * Conversations for real time and offline peer-to-peer web chat
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.conversations.model;

import java.io.File;
import java.net.URI;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import java.util.UUID;
import java.util.function.Function;
import java.util.stream.Collectors;

public interface DeltaDto  {
    String getDelta();

    UUID getConversationId();

    static AddMessageToConversationDeltaDto AddMessageToConversationDelta() {
        AddMessageToConversationDeltaDto result = new AddMessageToConversationDeltaDto();
        result.delta("AddMessageToConversationDelta");
        return result;
    }
    static UpdateConversationDeltaDto UpdateConversationDelta() {
        UpdateConversationDeltaDto result = new UpdateConversationDeltaDto();
        result.delta("UpdateConversationDelta");
        return result;
    }
    static CreateConversationDeltaDto CreateConversationDelta() {
        CreateConversationDeltaDto result = new CreateConversationDeltaDto();
        result.delta("CreateConversationDelta");
        return result;
    }

    static Class<? extends DeltaDto> getType(String delta) {
        switch (delta) {
        case "AddMessageToConversationDelta":
            return AddMessageToConversationDeltaDto.class;
        case "UpdateConversationDelta":
            return UpdateConversationDeltaDto.class;
        case "CreateConversationDelta":
            return CreateConversationDeltaDto.class;
        default:
            throw new IllegalArgumentException("Illegal delta " + delta);
        }
    }

    void readOnlyFieldsWithValue(List<String> fields);
}

