/*
 * ReqRes API
 * Fake data CRUD API
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.reqres_in.model;

import java.io.File;
import java.net.URI;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import java.util.UUID;
import java.util.function.Function;
import java.util.stream.Collectors;

/**
* UnknownResourceDto
*/
public class UnknownResourceDto {

    private Integer id = null;

    private String name = null;

    private Integer year = null;

    private String color = null;

    private String pantone_value = null;

    public static String[] readOnlyFields() {
        return new String[] {
        };
    }

    public static String[] writeOnlyFields() {
        return new String[] {
        };
    }

    public static String[] requiredFields() {
        return new String[] {
        };
    }

    public List<String> missingRequiredFields() {
        List<String> result = new ArrayList<>();
        return result;
    }

    public void readOnlyFieldsWithValue(List<String> result) {
    }

    public <T extends UnknownResourceDto> T copyTo(T target) {
        if (this.getId() != null) target.setId(this.getId());
        if (this.getName() != null) target.setName(this.getName());
        if (this.getYear() != null) target.setYear(this.getYear());
        if (this.getColor() != null) target.setColor(this.getColor());
        if (this.getPantoneValue() != null) target.setPantoneValue(this.getPantoneValue());
        return target;
    }

    private boolean isMissing(String s) {
        return s == null || s.isEmpty();
    }

    private boolean isMissing(List<?> list) {
        return list == null;
    }

    private boolean isMissing(Object s) {
        return s == null;
    }


    /**
     * Get id
     * @return id
     */
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public UnknownResourceDto id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get name
     * @return name
     */
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public UnknownResourceDto name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get year
     * @return year
     */
    public Integer getYear() {
        return year;
    }

    public void setYear(Integer year) {
        this.year = year;
    }

    public UnknownResourceDto year(Integer year) {
        this.year = year;
        return this;
    }

    /**
     * Get color
     * @return color
     */
    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    public UnknownResourceDto color(String color) {
        this.color = color;
        return this;
    }

    /**
     * Get pantone_value
     * @return pantone_value
     */
    public String getPantoneValue() {
        return pantone_value;
    }

    public void setPantoneValue(String pantoneValue) {
        this.pantone_value = pantoneValue;
    }

    public UnknownResourceDto pantoneValue(String pantoneValue) {
        this.pantone_value = pantoneValue;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UnknownResourceDto unknownResource = (UnknownResourceDto) o;
        return Objects.equals(this.getId(), unknownResource.getId()) &&
                Objects.equals(this.getName(), unknownResource.getName()) &&
                Objects.equals(this.getYear(), unknownResource.getYear()) &&
                Objects.equals(this.getColor(), unknownResource.getColor()) &&
                Objects.equals(this.getPantoneValue(), unknownResource.getPantoneValue());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(), getName(), getYear(), getColor(), getPantoneValue());
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("UnknownResourceDto {\n");
        sb.append("    id: ").append(toIndentedString(getId())).append("\n");
        sb.append("    name: ").append(toIndentedString(getName())).append("\n");
        sb.append("    year: ").append(toIndentedString(getYear())).append("\n");
        sb.append("    color: ").append(toIndentedString(getColor())).append("\n");
        sb.append("    pantone_value: ").append(toIndentedString(getPantoneValue())).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

