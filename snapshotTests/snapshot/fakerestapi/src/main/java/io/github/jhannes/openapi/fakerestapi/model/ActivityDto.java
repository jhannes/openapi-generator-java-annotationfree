/*
 * FakeRESTApi.Web V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.fakerestapi.model;

import java.io.File;
import java.net.URI;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import java.util.UUID;
import java.util.function.Function;
import java.util.stream.Collectors;

/**
* ActivityDto
*/
public class ActivityDto {

    private Integer id = null;

    private String title = null;

    private OffsetDateTime dueDate = null;

    private Boolean completed = null;

    public static String[] readOnlyFields() {
        return new String[] {
        };
    }

    public static String[] writeOnlyFields() {
        return new String[] {
        };
    }

    public static String[] requiredFields() {
        return new String[] {
        };
    }

    public List<String> missingRequiredFields() {
        List<String> result = new ArrayList<>();
        return result;
    }

    public void readOnlyFieldsWithValue(List<String> result) {
    }

    public <T extends ActivityDto> T copyTo(T target) {
        if (this.getId() != null) target.setId(this.getId());
        if (this.getTitle() != null) target.setTitle(this.getTitle());
        if (this.getDueDate() != null) target.setDueDate(this.getDueDate());
        if (this.getCompleted() != null) target.setCompleted(this.getCompleted());
        return target;
    }

    private boolean isMissing(String s) {
        return s == null || s.isEmpty();
    }

    private boolean isMissing(List<?> list) {
        return list == null;
    }

    private boolean isMissing(Object s) {
        return s == null;
    }


    /**
     * Get id
     * @return id
     */
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public ActivityDto id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get title
     * @return title
     */
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public ActivityDto title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get dueDate
     * @return dueDate
     */
    public OffsetDateTime getDueDate() {
        return dueDate;
    }

    public void setDueDate(OffsetDateTime dueDate) {
        this.dueDate = dueDate;
    }

    public ActivityDto dueDate(OffsetDateTime dueDate) {
        this.dueDate = dueDate;
        return this;
    }

    /**
     * Get completed
     * @return completed
     */
    public Boolean getCompleted() {
        return completed;
    }

    public void setCompleted(Boolean completed) {
        this.completed = completed;
    }

    public ActivityDto completed(Boolean completed) {
        this.completed = completed;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ActivityDto activity = (ActivityDto) o;
        return Objects.equals(this.getId(), activity.getId()) &&
                Objects.equals(this.getTitle(), activity.getTitle()) &&
                Objects.equals(this.getDueDate(), activity.getDueDate()) &&
                Objects.equals(this.getCompleted(), activity.getCompleted());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(), getTitle(), getDueDate(), getCompleted());
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("ActivityDto {\n");
        sb.append("    id: ").append(toIndentedString(getId())).append("\n");
        sb.append("    title: ").append(toIndentedString(getTitle())).append("\n");
        sb.append("    dueDate: ").append(toIndentedString(getDueDate())).append("\n");
        sb.append("    completed: ").append(toIndentedString(getCompleted())).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

