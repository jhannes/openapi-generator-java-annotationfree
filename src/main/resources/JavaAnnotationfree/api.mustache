{{>licenseInfo}}
package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import java.io.IOException;
import java.util.Map;
import java.util.List;
import java.util.Optional;
import java.util.function.Consumer;

{{#operations}}
public interface {{classname}} {
{{#operation}}
    /**
    {{#summary}}
     * {{summary}}
    {{/summary}}
    {{#notes}}
     * {{notes}}
    {{/notes}}
    {{#allParams}}
     * @param {{paramName}} {{description}}{{#isQueryParam}} (query){{/isQueryParam}}{{#isPathParam}} (path){{/isPathParam}}{{#required}} (required){{/required}}{{^required}} (optional{{^isContainer}}{{#defaultValue}}, default to {{.}}{{/defaultValue}}){{/isContainer}}{{/required}}
    {{/allParams}}
    {{#returnType}}
     * @return {{returnType}}
    {{/returnType}}
    {{#isDeprecated}}
     * @deprecated
    {{/isDeprecated}}
    {{#externalDocs}}
     * {{description}}
     * @see <a href="{{url}}">{{summary}} Documentation</a>
    {{/externalDocs}}
     */
    {{#isDeprecated}}
    @Deprecated
    {{/isDeprecated}}
    {{#isResponseFile}}byte[] {{/isResponseFile}}{{^isResponseFile}}{{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{/isResponseFile}}{{operationId}}({{#allParams}}{{#isPathParam}}
            {{{dataType}}} {{paramName}}{{/isPathParam}}{{#isQueryParam}}
            {{^required}}Optional<{{{dataType}}}>{{/required}}{{#required}}{{{dataType}}}{{/required}} {{baseName}}{{/isQueryParam}}{{#isBodyParam}}
            {{{dataType}}} {{paramName}}{{/isBodyParam}}{{#isFormParam}}
            {{^required}}Optional<{{{dataType}}}>{{/required}}{{#required}}{{{dataType}}}{{/required}} {{baseName}}{{/isFormParam}}{{#isHeaderParam}}
            {{^required}}Optional<{{{dataType}}}>{{/required}}{{#required}}{{{dataType}}}{{/required}} {{paramName}}{{/isHeaderParam}}{{^-last}},{{/-last}}{{/allParams}}{{#responses}}{{#headers}},
            Consumer<{{{dataType}}}> set{{nameInCamelCase}}{{/headers}}{{/responses}}
    ) throws IOException;
{{/operation}}
}
{{/operations}}
