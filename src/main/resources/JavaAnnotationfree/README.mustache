# {{artifactId}}

{{appName}}

- API version: {{appVersion}}
{{^hideGenerationTimestamp}}

- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}

{{#appDescriptionWithNewLines}}{{{appDescriptionWithNewLines}}}{{/appDescriptionWithNewLines}}

{{#infoUrl}}
  For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

*Automatically generated by the [OpenAPI Generator](https://openapi-generator.tech)*

## Requirements

Building the API client library requires:

1. Java {{#supportJava6}}1.6{{/supportJava6}}{{^supportJava6}}{{#java8}}1.8{{/java8}}{{^java8}}1.7{{/java8}}{{/supportJava6}}+
2. Maven/Gradle

## Installation

To install the API client library to your local Maven repository, simply execute:

```shell
mvn clean install
```

To deploy it to a remote Maven repository instead, configure the settings of the repository and execute:

```shell
mvn clean deploy
```

Refer to the [OSSRH Guide](http://central.sonatype.org/pages/ossrh-guide.html) for more information.

### Maven users

Add this dependency to your project's POM:

```xml
<dependency>
  <groupId>{{{groupId}}}</groupId>
  <artifactId>{{{artifactId}}}</artifactId>
  <version>{{{artifactVersion}}}</version>
  <scope>compile</scope>
</dependency>
```

### Gradle users

Add this dependency to your project's build file:

```groovy
compile "{{{groupId}}}:{{{artifactId}}}:{{{artifactVersion}}}"
```

### Others

At first generate the JAR by executing:

```shell
mvn clean package
```

Then manually install the following JARs:

- `target/{{{artifactId}}}-{{{artifactVersion}}}.jar`
- `target/lib/*.jar`

## Getting Started

Please follow the [installation](#installation) instruction and execute the following Java code:

```java
{{#apiInfo}}{{#apis}}{{#-first}}{{#operations}}{{#operation}}{{#-first}}
import {{{invokerPackage}}}.api.*;
import {{{invokerPackage}}}.models.*;

public class Example {
    public static void main(String[] args) {
{{#hasAuthMethods}}
    {{#authMethods}}{{#isBasic}}{{#isBasicBasic}}
        // Configure HTTP basic authorization: {{{name}}}
        {{{classname}}} client = new Http{{{classname}}}() {
            protected HttpURLConnection openConnection(String relativeUrl) throws IOException {
                HttpURLConnection connection = super.openConnection(relativeUrl);
                String authentication = "Basic " + Base64.getEncoder().encode(("USERNAME" + ":" + "PASSWORD").getBytes());
                connection.setRequestParameter("Authorization", authentication);
                return connection;
            }
        };{{/isBasicBasic}}{{#isBasicBearer}}
        // Configure HTTP basic authorization: {{{name}}}
        {{{classname}}} client = new Http{{{classname}}}() {
            protected HttpURLConnection openConnection(String relativeUrl) throws IOException {
                HttpURLConnection connection = super.openConnection(relativeUrl);
                String authentication = "Bearer " + "BEARER TOKEN";
                connection.setRequestParameter("Authorization", authentication);
                return connection;
            }
        };{{/isBasicBearer}}{{/isBasic}}{{#isApiKey}}// Configure HTTP bearer authorization: {{{name}}}
        {{{classname}}} client = new Http{{{classname}}}() {
            protected HttpURLConnection openConnection(String relativeUrl) throws IOException {
                HttpURLConnection connection = super.openConnection(relativeUrl);
                connection.setRequestParameter("{{keyParamName}}", apiKey);
                return connection;
            }
        };{{/isApiKey}}{{#isOAuth}}
        // Configure HTTP basic authorization: {{{name}}}
        HttpURLConnectionApiClient client = new HttpURLConnectionApiClient("{{basePath}}") {
            @Override
            public ClientExchange createExchange() {
                String authentication = "Bearer " + "BEARER TOKEN";
                exchange.setHeader("Authorization", authentication);
                return exchange;
            }
        };{{/isOAuth}}
    {{/authMethods}}
{{/hasAuthMethods}}
{{^hasAuthMethods}}
        {{{classname}}} client = new Http{{{classname}}}();
{{/hasAuthMethods}}

        {{#allParams}}
        {{{dataType}}} {{{paramName}}} = {{{example}}}; // {{{dataType}}} | {{{description}}}
        {{/allParams}}
        try {
            {{#returnType}}{{{returnType}}} result = {{/returnType}}client.{{{operationId}}}({{#allParams}}{{{paramName}}}{{^-last}}, {{/-last}}{{/allParams}});{{#returnType}}
            System.out.println(result);{{/returnType}}
        } catch (IOException e) {
            System.err.println("Exception when calling {{{classname}}}#{{{operationId}}}");
            e.printStackTrace();
        }
    }
}
{{/-first}}{{/operation}}{{/operations}}{{/-first}}{{/apis}}{{/apiInfo}}
```

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for Models

{{#models}}{{#model}} - [{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}

## Documentation for Authorization

{{^authMethods}}All endpoints do not require authorization.
{{/authMethods}}Authentication schemes defined for the API:
{{#authMethods}}### {{name}}

{{#isApiKey}}

- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}

- **Type**: HTTP basic authentication
{{/isBasic}}
{{#isOAuth}}

- **Type**: OAuth
- **Flow**: {{flow}}
- **Authorization URL**: {{authorizationUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - {{scope}}: {{description}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}

## Recommendation

It's recommended to create an instance of `ApiClient` per thread in a multithreaded environment to avoid any potential issues.

## Author

{{#apiInfo}}{{#apis}}{{#-last}}{{infoEmail}}
{{/-last}}{{/apis}}{{/apiInfo}}
